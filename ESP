local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local Camera = game.Workspace.CurrentCamera

-- Constants
local REFERENCE_TEXT_SIZE = 10
local MIN_SIZE = Vector2.new(5, 5) -- Minimum size for the ESP box
local UPDATE_INTERVAL = 5          -- Update interval for inventory and armor
local DISTANCE_UPDATE_INTERVAL = 0.2

-- Toggle states
local inventoryVisible = true
local armorVisible = true

-- Keybinds
local inventoryToggleKey = Enum.KeyCode.I  -- Inventory toggle key
local armorToggleKey = Enum.KeyCode.O      -- Armor toggle key

-- Helper function to get a valid position part of the character
local function getPositionPart(character)
    return character:FindFirstChild("HumanoidRootPart") or 
           character:FindFirstChild("Torso") or 
           character:FindFirstChild("UpperTorso") or 
           character:FindFirstChildWhichIsA("BasePart")
end

-- Function to clear tags
local function clearTags(tags)
    for _, tag in ipairs(tags) do
        tag:Remove()
    end
    return {}
end

-- Function to initialize tags
local function initializeTags(count, color)
    local tags = {}
    for i = 1, count do
        local tag = Drawing.new("Text")
        tag.Size = REFERENCE_TEXT_SIZE
        tag.Center = true
        tag.Outline = true
        tag.Color = color
        tag.Visible = false
        table.insert(tags, tag)
    end
    return tags
end

-- Function to update tags with filtering
local function updateTags(folder, initialPosition, direction, tags, color, filter)
    if not folder then
        return clearTags(tags)
    end

    local validChildren = {}
    for _, item in ipairs(folder:GetChildren()) do
        if not filter or not filter[item.Name] then
            table.insert(validChildren, item)
        end
    end

    tags = clearTags(tags)
    tags = initializeTags(#validChildren, color)
    for i, item in ipairs(validChildren) do
        local tag = tags[i]
        tag.Text = item.Name
        tag.Position = initialPosition + direction * (i * REFERENCE_TEXT_SIZE)
        tag.Visible = true
    end

    return tags
end

local function createESP(player)
    local box = Drawing.new("Square")
    box.Color = Color3.new(1, 0, 0)  -- Red color
    box.Thickness = 2

    local nameTag = Drawing.new("Text")
    nameTag.Color = Color3.new(1, 1, 1)  -- White color
    nameTag.Center = true
    nameTag.Outline = true

    local distanceTag = Drawing.new("Text")
    distanceTag.Color = Color3.new(1, 1, 1)  -- White color
    distanceTag.Center = true
    distanceTag.Outline = true

    local inventoryTags, armorTags = {}, {}

    local function updateESP()
        local character = player.Character
        if not character then
            return
        end

        local rootPart = getPositionPart(character)
        if not rootPart then
            box.Visible = false
            nameTag.Visible = false
            distanceTag.Visible = false
            return
        end

        local vector, onScreen = Camera:WorldToViewportPoint(rootPart.Position)
        if not onScreen then
            box.Visible = false
            nameTag.Visible = false
            distanceTag.Visible = false
            inventoryTags = clearTags(inventoryTags)
            armorTags = clearTags(armorTags)
            return
        end

        local size = Vector2.new(math.max(2000 / vector.Z, MIN_SIZE.X), math.max(2500 / vector.Z, MIN_SIZE.Y))
        local position = Vector2.new(vector.X - size.X / 2, vector.Y - size.Y / 2)

        box.Size = size
        box.Position = position
        box.Visible = true

        nameTag.Position = Vector2.new(vector.X, vector.Y + size.Y / 2 + 5)
        nameTag.Text = player.Name
        nameTag.Size = math.max(REFERENCE_TEXT_SIZE * (1 / vector.Z), REFERENCE_TEXT_SIZE)
        nameTag.Visible = true

        local distance = math.ceil((rootPart.Position - Camera.CFrame.Position).Magnitude / 3)
        distanceTag.Position = Vector2.new(vector.X, vector.Y + size.Y / 2 + 5 + REFERENCE_TEXT_SIZE)
        distanceTag.Text = string.format("%d M", distance)
        distanceTag.Size = math.max(REFERENCE_TEXT_SIZE * (1 / vector.Z), REFERENCE_TEXT_SIZE)
        distanceTag.Visible = true

        -- Handle visibility of inventory and armor tags
        if inventoryVisible then
            local invInitPos = Vector2.new(vector.X, vector.Y - size.Y / 2 - 25)
            inventoryTags = updateTags(
                ReplicatedStorage:FindFirstChild("Players"):FindFirstChild(player.Name):FindFirstChild("Inventory"),
                invInitPos, Vector2.new(0, -1), inventoryTags, Color3.new(1, 1, 1), nil
            )
        else
            inventoryTags = clearTags(inventoryTags)
        end

        if armorVisible then
            local armourInitPos = Vector2.new(vector.X + size.X / 2 + 50, vector.Y - size.Y / 2)
            armorTags = updateTags(
                ReplicatedStorage:FindFirstChild("Players"):FindFirstChild(player.Name):FindFirstChild("Clothing"),
                armourInitPos, Vector2.new(0, -1), armorTags, Color3.new(1, 1, 0), {
                    WastelandShirt = true, WastelandPants = true,
                    CivilianShirt = true, CivilianPants = true,
                    GhillieTorso = true, GhillieLegs = true,
                    CamoShirt = true, CamoPants = true,
                    Balaclava = true, GorkaPants = true, GorkaShirt = true
                }
            )
        else
            armorTags = clearTags(armorTags)
        end
    end

    local function updateInventoryAndArmor()
        while true do
            local character = player.Character
            if character then
                local rootPart = getPositionPart(character)
                if rootPart then
                    local vector = Camera:WorldToViewportPoint(rootPart.Position)
                    local size = Vector2.new(math.max(2000 / vector.Z, MIN_SIZE.X), math.max(2500 / vector.Z, MIN_SIZE.Y))

                    if inventoryVisible then
                        local inventoryFolder = ReplicatedStorage:FindFirstChild("Players"):FindFirstChild(player.Name):FindFirstChild("Inventory")
                        inventoryTags = updateTags(inventoryFolder, Vector2.new(vector.X, vector.Y - size.Y / 2 - 25), Vector2.new(0, -1), inventoryTags, Color3.new(1, 1, 1), nil)
                    else
                        inventoryTags = clearTags(inventoryTags)
                    end

                    if armorVisible then
                        local armorFolder = ReplicatedStorage:FindFirstChild("Players"):FindFirstChild(player.Name):FindFirstChild("Clothing")
                        local filter = {
                            WastelandShirt = true, WastelandPants = true,
                            CivilianShirt = true, CivilianPants = true,
                            GhillieTorso = true, GhillieLegs = true,
                            CamoShirt = true, CamoPants = true,
                            Balaclava = true, GorkaPants = true, GorkaShirt = true
                        }
                        armorTags = updateTags(armorFolder, Vector2.new(vector.X + size.X / 2 + 10, vector.Y - size.Y / 2 - 25), Vector2.new(0, -1), armorTags, Color3.new(1, 1, 0), filter)
                    else
                        armorTags = clearTags(armorTags)
                    end
                end
            end

            wait(UPDATE_INTERVAL)  -- Wait for defined interval before fetching again
        end
    end

    RunService.RenderStepped:Connect(updateESP)
    coroutine.wrap(updateInventoryAndArmor)()

    -- Clean up ESP elements when player leaves
    local function onPlayerRemoving(leavingPlayer)
        if leavingPlayer == player then
            box:Remove()
            nameTag:Remove()
            distanceTag:Remove()
            inventoryTags = clearTags(inventoryTags)
            armorTags = clearTags(armorTags)
        end
    end

    Players.PlayerRemoving:Connect(onPlayerRemoving)
end

local function onPlayerAdded(player)
    if player ~= Players.LocalPlayer then
        createESP(player)
    end
end

Players.PlayerAdded:Connect(onPlayerAdded)

for _, player in ipairs(Players:GetPlayers()) do
    if player ~= Players.LocalPlayer then
        createESP(player)
    end
end

-- Toggle functions for inventory and armor visibility
local function toggleInventory()
    inventoryVisible = not inventoryVisible
end

local function toggleArmor()
    armorVisible = not armorVisible
end

-- Listen for key presses to toggle inventory and armor visibility
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed then
        if input.KeyCode == inventoryToggleKey then
            toggleInventory()
        elseif input.KeyCode == armorToggleKey then
            toggleArmor()
        end
    end
end)
